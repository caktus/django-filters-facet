# Generated by Django 4.0.6 on 2022-07-28 01:27

import django.db.models.deletion

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Agency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "census_profile_id",
                    models.CharField(blank=True, default="", max_length=16),
                ),
                ("last_reported_stop", models.DateField(null=True)),
            ],
            options={
                "verbose_name_plural": "Agencies",
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("person_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(
                        choices=[("D", "Driver"), ("P", "Passenger")], max_length=2
                    ),
                ),
                ("age", models.PositiveSmallIntegerField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=2
                    ),
                ),
                (
                    "ethnicity",
                    models.CharField(
                        choices=[("H", "Hispanic"), ("N", "Non-Hispanic")], max_length=2
                    ),
                ),
                (
                    "race",
                    models.CharField(
                        choices=[
                            ("A", "Asian"),
                            ("B", "Black"),
                            ("I", "Native American"),
                            ("U", "Other"),
                            ("W", "White"),
                        ],
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Search",
            fields=[
                ("search_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Consent"),
                            (2, "Search Warrant"),
                            (3, "Probable Cause"),
                            (4, "Search Incident to Arrest"),
                            (5, "Protective Frisk"),
                        ]
                    ),
                ),
                ("vehicle_search", models.BooleanField(default=False)),
                ("driver_search", models.BooleanField(default=False)),
                ("passenger_search", models.BooleanField(default=False)),
                ("property_search", models.BooleanField(default=False)),
                ("vehicle_siezed", models.BooleanField(default=False)),
                ("personal_property_siezed", models.BooleanField(default=False)),
                ("other_property_sized", models.BooleanField(default=False)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_stops.person",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stop",
            fields=[
                (
                    "stop_id",
                    models.PositiveIntegerField(primary_key=True, serialize=False),
                ),
                ("agency_description", models.CharField(max_length=100)),
                ("date", models.DateTimeField(db_index=True)),
                (
                    "purpose",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Speed Limit Violation"),
                            (2, "Stop Light/Sign Violation"),
                            (3, "Driving While Impaired"),
                            (4, "Safe Movement Violation"),
                            (5, "Vehicle Equipment Violation"),
                            (6, "Vehicle Regulatory Violation"),
                            (7, "Seat Belt Violation"),
                            (8, "Investigation"),
                            (9, "Other Motor Vehicle Violation"),
                            (10, "Checkpoint"),
                        ]
                    ),
                ),
                (
                    "action",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Verbal Warning"),
                            (2, "Written Warning"),
                            (3, "Citation Issued"),
                            (4, "On-View Arrest"),
                            (5, "No Action Taken"),
                        ]
                    ),
                ),
                ("driver_arrest", models.BooleanField(default=False)),
                ("passenger_arrest", models.BooleanField(default=False)),
                ("encounter_force", models.BooleanField(default=False)),
                ("engage_force", models.BooleanField(default=False)),
                ("officer_injury", models.BooleanField(default=False)),
                ("driver_injury", models.BooleanField(default=False)),
                ("passenger_injury", models.BooleanField(default=False)),
                ("officer_id", models.CharField(max_length=15)),
                ("stop_location", models.CharField(max_length=15)),
                ("stop_city", models.CharField(max_length=20)),
                (
                    "agency",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stops",
                        to="traffic_stops.agency",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SearchBasis",
            fields=[
                (
                    "search_basis_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "basis",
                    models.CharField(
                        choices=[
                            ("ER", "Erratic/Suspicious Behavior"),
                            ("OB", "Observation of Suspected Contraband"),
                            ("OI", "Other Official Information"),
                            ("SM", "Suspicious Movement"),
                            ("TIP", "Informant Tip"),
                            ("WTNS", "Witness Observation"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_stops.person",
                    ),
                ),
                (
                    "search",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_stops.search",
                    ),
                ),
                (
                    "stop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_stops.stop",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="search",
            name="stop",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="traffic_stops.stop"
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="stop",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="traffic_stops.stop"
            ),
        ),
        migrations.CreateModel(
            name="Contraband",
            fields=[
                (
                    "contraband_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("ounces", models.FloatField(default=0, null=True)),
                ("pounds", models.FloatField(default=0, null=True)),
                ("pints", models.FloatField(default=0, null=True)),
                ("gallons", models.FloatField(default=0, null=True)),
                ("dosages", models.FloatField(default=0, null=True)),
                ("grams", models.FloatField(default=0, null=True)),
                ("kilos", models.FloatField(default=0, null=True)),
                ("money", models.FloatField(default=0, null=True)),
                ("weapons", models.FloatField(default=0, null=True)),
                ("dollar_amount", models.FloatField(default=0, null=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_stops.person",
                    ),
                ),
                (
                    "search",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_stops.search",
                    ),
                ),
                (
                    "stop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="traffic_stops.stop",
                    ),
                ),
            ],
        ),
    ]
